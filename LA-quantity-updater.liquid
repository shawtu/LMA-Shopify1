<section class="custom-quantity-updater">
  <h3>Update Quantity</h3>

  {% assign metaobject_ref = product.metafields.custom.product_sales_highlights %}
  {% if metaobject_ref %}
    <!-- Quantity Input with Minus and Plus Buttons -->
    <div class="quantity-wrapper" style="display: flex; align-items: center; gap: 10px;">
      <!-- Minus Button -->
      <button id="decrease-quantity" type="button" style="padding: 5px 10px;">-</button>

      <!-- Quantity Input -->
      <input id="quantity-input" type="number" min="1" value="1" style="text-align: center; width: 200px;" />

      <!-- Plus Button -->
      <button id="increase-quantity" type="button" style="padding: 5px 10px;">+</button>
    </div>

    <!-- Total Coverage Info -->
    <p id="coverage-info" style="margin-top: 10px;">
      Total Coverage: <span id="total-coverage">DNF</span> <span id="unit-of-measurement">DNF</span>
    </p>

    <!-- Hidden Data for JS -->
    <div id="quantity-updater-data"
      data-measured-area="{{ metaobject_ref.value.measured_area | default: 1 }}"
      data-unit-of-measurement="{{ metaobject_ref.value.unit_of_measurement | default: 'square foot' }}">
    </div>
  {% else %}
    <p style="color: red;">Product sales highlights data is not available.</p>
  {% endif %}
</section>

<script>
  const quantityUpdaterData = document.querySelector("#quantity-updater-data");

  if (quantityUpdaterData) {
    // Retrieve data from the hidden #quantity-updater-data div
    const measuredArea = parseFloat(quantityUpdaterData.getAttribute("data-measured-area"));
    const unitOfMeasurement = quantityUpdaterData.getAttribute("data-unit-of-measurement");

    function updateCoverage(quantity) {
      const totalCoverage = quantity * measuredArea;
      document.querySelector("#total-coverage").innerText = totalCoverage.toFixed(2);
      document.querySelector("#unit-of-measurement").innerText = unitOfMeasurement;
    }

    document.querySelector("#decrease-quantity").addEventListener("click", function () {
      const quantityInput = document.querySelector("#quantity-input");
      let quantity = parseInt(quantityInput.value);
      if (quantity > 1) {
        quantity -= 1;
        quantityInput.value = quantity;
        updateCoverage(quantity);
      }
    });

    document.querySelector("#increase-quantity").addEventListener("click", function () {
      const quantityInput = document.querySelector("#quantity-input");
      let quantity = parseInt(quantityInput.value);
      quantity += 1;
      quantityInput.value = quantity;
      updateCoverage(quantity);
    });

    document.querySelector("#quantity-input").addEventListener("input", function () {
      let quantity = parseInt(this.value);
      if (quantity < 1 || isNaN(quantity)) {
        quantity = 1; // Set to 1 if the value is invalid
        this.value = quantity;
      }
      updateCoverage(quantity);
    });

    // Initialize coverage on page load
    updateCoverage(parseInt(document.querySelector("#quantity-input").value));
  }
</script>

{% schema %}
{
  "name": "LA Custom Quantity",
  "settings": [],
  "presets": [
    {
      "name": "LA Quantity Updater",
      "category": "Product"
    }
  ]
}
{% endschema %}
